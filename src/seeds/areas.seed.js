/**
 * Seed para crear/actualizar √°reas base de LaCoope.
 * Ejecutar con:  npm run seed:areas
 */
import "dotenv/config";
import mongoose from "mongoose";
import Area from "../models/Area.model.js";

const BASE_AREAS = [
  { name: "Internet", description: "√Årea de conectividad y redes" },
  { name: "Energ√≠a", description: "√Årea de distribuci√≥n el√©ctrica" },
  { name: "Administraci√≥n", description: "Gesti√≥n administrativa y contable" },
  { name: "Comercial", description: "Atenci√≥n al cliente y ventas" },
  { name: "T√©cnica", description: "Soporte t√©cnico general" },
];

async function main() {
  try {
    const uri = process.env.MONGODB_URI || process.env.MONGO_URI;
    if (!uri) {
      throw new Error("Falta MONGODB_URI o MONGO_URI en el archivo .env");
    }

    await mongoose.connect(uri);
    console.log("‚úÖ Conectado a MongoDB");

    for (const area of BASE_AREAS) {
      const existing = await Area.findOne({ name: area.name });
      if (existing) {
        existing.description = area.description ?? existing.description;
        if (existing.isActive === undefined) existing.isActive = true;
        await existing.save();
        console.log(`‚Üª Actualizada √°rea: ${area.name}`);
      } else {
        await Area.create(area);
        console.log(`Ôºã Creada √°rea: ${area.name}`);
      }
    }

    const count = await Area.countDocuments({});
    console.log(`\nüìä Total de √°reas en BD: ${count}`);

    await mongoose.disconnect();
    console.log("üîå Desconectado de MongoDB");
    process.exit(0);
  } catch (err) {
    console.error("‚ùå Error en seed de √°reas:", err.message);
    process.exit(1);
  }
}

main();